cmake_minimum_required(VERSION 3.17)

project(GLSandbox)

set(CMAKE_CXX_STANDARD 20)

file(COPY src/Shaders DESTINATION ${CMAKE_BINARY_DIR})

find_package(OpenGL REQUIRED)

if(WIN32)
    message("WIN32 detected")
    message("Loading SDL2")
    set(SDL_LOCATION "c:/programs/sdl/lib/x64")
    set(SDL_HEAD_LOCATION "c:/programs/sdl/include")
    find_library(SDL SDL2 PATHS ${SDL_LOCATION})
    find_library(SDLmain SDL2main PATHS ${SDL_LOCATION})
    include_directories("${SDL_HEAD_LOCATION}")
elseif(UNIX)
    if(APPLE)
        message("UNIX (Apple) detected")
        message("Loading SDL2")
        set(SDL_LOCATION "${CMAKE_SOURCE_DIR}/lib")
        set(SDL_HEAD_LOCATION "${CMAKE_SOURCE_DIR}/lib/SDL2.framework/Versions/Current/Headers")
        find_library(SDL SDL2 PATHS ${SDL_LOCATION})
        include_directories("${SDL_HEAD_LOCATION}")
    else()
        message("UNIX detected")
        message("Loading SDL2")
        find_package(SDL2 REQUIRED)
        include_directories(${SDL2_INCLUDE_DIRS})
    endif()
endif()

file(GLOB_RECURSE SRC CMAKE_CONFIGURE_DEPENDS "src/*.h" "src/*.cpp")

message("Loading libraries")
add_subdirectory(lib/)

set(EXECUTABLE ${CMAKE_PROJECT_NAME})
message("Creating executable: " ${EXECUTABLE})
if(WIN32)
    add_executable(${EXECUTABLE} WIN32 ${SRC})
    target_link_libraries(${EXECUTABLE} ${SDL} ${SDLmain} stb glad glm imgui nfd)
else()
    add_executable(${EXECUTABLE} ${SRC} ${GLAD} ${GLM})
    target_link_libraries(${EXECUTABLE} "glad" ${OPENGL_gl_LIBRARY})
    if(APPLE)
        target_link_libraries(${EXECUTABLE} ${SDL} stb glad glm imgui nfd)
    else()
        target_link_libraries(${EXECUTABLE} ${SDL2_LIBRARIES} ${CMAKE_DL_LIBS} stb glad glm imgui nfd)
    endif()
endif()

target_compile_definitions(imgui PUBLIC IMGUI_DEFINE_MATH_OPERATORS)
